CS1			EQU	3020H
DATA8251 	EQU	CS1+00H
CTRL8251 	EQU CS1+01H

IRQ7_IVADD EQU 003CH ;IRQ7 对应的中断矢量地址
IRQ7_OCW1 EQU 021H ;IRQ7 对应PC 机内部8259 的OCW1 地址
IRQ7_OCW2 EQU 020H ;IRQ7 对应PC 机内部8259 的OCW2 地址
IRQ7_IM EQU 07FH ;IRQ7 对应的中断屏蔽字


DATA	SEGMENT
BUFFER	DB 'This is a message.$'
CS7_BAK DW ? ;保存IRQ7 原中断处理程序入口段地址的变量
IP7_BAK DW ? ;保存IRQ7 原中断处理程序入口偏移地址的变量
IM7_BAK DB ? ;保存IRQ7 原中断屏蔽字的变量
DATA	ENDS

CODE	SEGMENT
		ASSUME	CS:CODE,DS:DATA
START:	MOV AX,DATA
		MOV DS,AX
		CALL INIT_PROC
		
		CLI
		MOV AX,0000H ;替换IRQ7 的中断矢量
		MOV ES,AX
		MOV DI,IRQ7_IVADD
		MOV AX,ES:[DI]
		MOV IP7_BAK,AX ;保存IRQ10 原中断处理程序入口偏移地址
		MOV AX,OFFSET REVP
		MOV ES:[DI],AX ;设置当前中断处理程序入口偏移地址

		ADD DI,2
		MOV AX,ES:[DI]
		MOV CS7_BAK,AX ;保存IRQ7 原中断处理程序入口段地址
		MOV AX,SEG REVP
		MOV ES:[DI],AX ;设置当前中断处理程序入口段地址
		MOV DX,IRQ7_OCW1 ;设置中断屏蔽寄存器，打开IRQ10 的屏蔽位
		IN AL,DX
		MOV IM7_BAK,AL ;保存IRQ7 原中断屏蔽字
		AND AL,IRQ7_IM
		OUT DX,AL
		STI
		
WAIT1: 	MOV AH,1 ;判断是否有按键按下
		INT 16H
		JZ WAIT1 ;无按键则跳回继续等待，有则退出
		
		;CALL REVP
		

FINISH:	CLI
		MOV AX,0000H ;恢复IRQ7 原中断矢量
		MOV ES,AX
		MOV DI,IRQ7_IVADD
		MOV AX,IP7_BAK ;恢复IRQ7 原中断处理程序入口偏移地址
		MOV ES:[DI],AX
		ADD DI,2
		MOV AX,CS7_BAK ;恢复IRQ7 原中断处理程序入口段地址
		MOV ES:[DI],AX
		MOV DX,IRQ7_OCW1 ;恢复IRQ7 原中断屏蔽寄存器的屏蔽字
		MOV AL,IM7_BAK
		OUT DX,AL
		STI
		MOV AX,4C00H
		INT 21H

INIT_PROC	PROC
		MOV DX,CTRL8251
		MOV AL,0
		OUT DX,AL
		MOV CX,8H
L1:		LOOP L1
		OUT DX,AL
		MOV CX,8H
L2:		LOOP L2
		OUT DX,AL
		MOV CX,8H
L3:		LOOP L3
		MOV AL,40H
		OUT DX,AL
		MOV CX,8H
L4:		LOOP L4
		MOV AL,4EH
		OUT DX,AL
		MOV CX,8H
L5:		LOOP L5
		MOV AL,25H
		OUT DX,AL
		MOV CX,8H
L6:		LOOP L6
		RET
INIT_PROC	ENDP


SEND_CHAR	PROC
SEND_CHECK:	MOV DX,CTRL8251
			IN	AL,DX
			TEST	AL,01H
			JZ	SEND_CHECK
			MOV AL,BL
			MOV DX,DATA8251
			OUT DX,AL
			RET
SEND_CHAR	ENDP


REV_CHAR	PROC
REV_CHECK:	MOV DX,CTRL8251
			IN 	AL,DX
			TEST AL,02H
			JZ	REV_CHECK
			MOV DX,DATA8251
			IN	AL,DX
			XOR DX,DX
			MOV DL,AL
			RET
REV_CHAR	ENDP

REVP PROC NEAR ;中断处理程序MYISR
L9REV:	
		PUSH AX
		PUSH BX
		PUSH DX
		PUSH SI	
		MOV SI,OFFSET BUFFER
		MOV BL,[SI]
		INC SI
		CALL REV_CHAR
		MOV [SI],DL
		CMP DL,'$'
		JZ OVER7
		MOV AL,33H
		MOV AH,0EH
		INT 10H
		JMP L9REV
OVER7:	MOV DX,IRQ7_OCW2 ;向PC 机内部8259 发送中断结束命令
		MOV AL,20H
		OUT DX,AL
		POP SI
		POP DX
		POP BX
		POP AX
		IRET
REVP ENDP
	
CODE	ENDS
		END START
